name: release-main

on:
  push:
    branches: [main]

  workflow_dispatch:
    inputs:
      tag_version:
        description: 'Tag version for this release'
        required: true
        default: 'x.y.z'

jobs:
  windows-build:      
    runs-on: windows-latest
    outputs:
      tag: ${{ steps.build.outputs.tag }}
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Create build
        id: build
        uses: ./.github/actions/build-project

  # linux-build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out
  #       uses: actions/checkout@v3

  #     - name: Create build
  #       id: build
  #       uses: ./.github/actions/build-project

  release:
    runs-on: ubuntu-latest
    needs: [windows-build]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.windows-build.outputs.tag }}
          release_name: ${{ needs.windows-build.outputs.tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Build and publish to PyPI
        run: |
          source .venv/bin/activate
          poetry version $RELEASE_VERSION
          make build-and-publish
        env: 
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          RELEASE_VERSION: ${{ needs.windows-build.outputs.tag }}
